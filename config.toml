stop-words = "../../meta/data/lemur-stopwords.txt"
libsvm-modules = "../../meta/deps/libsvm-modules/"
prefix = "../../meta-data/"
function-words = "../../meta/data/function-words.txt"
punctuation = "../../meta/data/sentence-boundaries/sentence-punctuation.txt"
start-exceptions = "../../meta/data/sentence-boundaries/sentence-start-exceptions.txt"
end-exceptions = "../../meta/data/sentence-boundaries/sentence-end-exceptions.txt"
query-judgements = "../../meta/data/ceeaus-qrels.txt"
query-path = "../queries.txt" # create this file

#dataset = "20newsgroups"
#corpus = "line.toml" # located inside dataset folder
#forward-index = "20news-fwd"
#inverted-index = "20news-inv"
#indexer-ram-budget = 1024 # **estimated** RAM budget for indexing in MB
#                          # always set this lower than your physical RAM!

dataset = "tuffy"
corpus = "libsvm.toml"
forward-index = "tuffy-fwd"
inverted-index = "tuffy-inv"

[[analyzers]]
method = "libsvm"

#[[analyzers]]
#method = "ngram-word"
#ngram = 1
#filter = "default-chain"

[ranker]
method = "bm25"
k1 = 1.2
b = 0.75
k3 = 500

[classifier]
method = "one-vs-one"
[classifier.base]
method = "sgd"
loss = "hinge"

[lda]
inference = "gibbs"
max-iters = 1000
alpha = 1.0
beta = 1.0
topics = 4
model-prefix = "lda-model"

[crf]
prefix = "crf"
treebank = "penn-treebank" # relative to data prefix
corpus = "wsj"
section-size = 99
train-sections = [0, 18]
dev-sections = [19, 21]
test-sections = [22, 24]

[diff]
prefix = "../data"
dataset = "20newsgroups"
n-value = 3
max-edits = 3
# penalty defaults are all zero (no penalty)
base-penalty = 0.0 # base penalty is for any edit
insert-penalty = 0.0
substitute-penalty = 0.0
remove-penalty = 0.0

[features]
method = "info-gain"
prefix = "features"
features-per-class = 20

[sequence]
prefix = "perceptron-tagger"
treebank = "penn-treebank" # relative to data prefix
corpus = "wsj"
section-size = 99
train-sections = [0, 18]
dev-sections = [19, 21]
test-sections = [22, 24]

[parser]
prefix = "parser"
treebank = "penn-treebank" # relative to data prefix
corpus = "wsj"
section-size = 99
train-sections = [2, 21]
dev-sections = [22, 22]
test-sections = [23, 23]

[language-model]
arpa-file = "../data/english-sentences.arpa"
binary-file-prefix = "english-sentences-"

[active-learning]
num-seeds = 10
#max-train-size = 1000
max-train-size = 150

[active-learning-assign]
num-seeds = 5
max-train-size = 106
